
Применены техники тест-дизайна: разбиение на классы эквивалентности, анализ граничных значений.
Проверено нулевое значение.

Граничные значения - 13 и 19 лет.

Классы эквивалентности:
1. возраст младше 13 лет;
2. возраст от 13 до 19 лет (включительно);
3. возраст старше 19 лет.

В методе isTeenager() допущены следующие ошибками:
1 - значение age равное 19 лет не относится к возрасту тинейджера (по условию возраст 19 лет - это тинейджер);
2 - значения age меньшие 13 лет относятся к возрасту тинейджера (по условию возраст меньше 13 лет - это не тинейджер).

При тестировании со значениями возраста 0, 5, 12 (1 класс) во всех тестах выявляется ошибка 2;
при тестировании со значениями возраста 13, 14, 16, 18, 19 (2 класс) выявляется ошибка 1 при значении 19, остальные тесты проходят успешно;
при тестировании со значениями возраста 20, 30 (3 класс) тесты проходят успешно.


Вариант верной реализации метода isTeenager():

public static boolean isTeenager(int age)
    {
        boolean result;
        if (age <= 19 && age >= 13) {
            result = true;
        }
        else {
            result = false;
        }
        return result;
    }
